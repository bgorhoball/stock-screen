name: Production VCP Screening Test

on:
  workflow_dispatch:  # Manual trigger only
    inputs:
      confirm_full_screening:
        description: 'Type "CONFIRM" to run full S&P 500 screening'
        required: true
        default: ''

jobs:
  production-test:
    runs-on: ubuntu-latest

    steps:
    - name: Verify confirmation
      run: |
        if [ "${{ github.event.inputs.confirm_full_screening }}" != "CONFIRM" ]; then
          echo "❌ Must type 'CONFIRM' to run production test"
          echo "This will scan all ~500 S&P 500 stocks and may take 15-30 minutes"
          exit 1
        fi
        echo "✅ Confirmed - Starting production test"

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libxml2-dev libxslt-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create output directory
      run: mkdir -p daily_reports

    - name: Run PRODUCTION VCP screening (Full S&P 500)
      env:
        ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
        FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        echo "🚀 PRODUCTION TEST: Scanning ALL S&P 500 stocks (~500 symbols)"
        echo "⏱️ Expected duration: 15-30 minutes"
        echo "📊 This will generate a realistic VCP detection rate"

        START_TIME=$(date +%s)

        python vcp_screen.py \
          --output daily_reports \
          --config config/config.yaml \
          --verbose

        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))

        echo "✅ Production screening completed in ${DURATION} seconds"

    - name: Analyze production results
      run: |
        echo "📊 PRODUCTION SCREENING ANALYSIS"
        echo "=================================="

        # Check if CSV report was generated
        if ls daily_reports/vcp_matches_*.csv 1> /dev/null 2>&1; then
          LATEST_CSV=$(ls -t daily_reports/vcp_matches_*.csv | head -n1)

          # Count total patterns found
          TOTAL_PATTERNS=$(tail -n +2 "$LATEST_CSV" | wc -l)

          # Count high confidence patterns
          HIGH_CONF=$(tail -n +2 "$LATEST_CSV" | awk -F',' '$2 >= 0.8' | wc -l)

          # Count medium confidence patterns
          MED_CONF=$(tail -n +2 "$LATEST_CSV" | awk -F',' '$2 >= 0.5 && $2 < 0.8' | wc -l)

          echo "Total VCP patterns found: $TOTAL_PATTERNS"
          echo "High confidence (≥0.8): $HIGH_CONF"
          echo "Medium confidence (0.5-0.8): $MED_CONF"

          if [ "$TOTAL_PATTERNS" -gt 0 ]; then
            echo ""
            echo "📈 TOP PATTERNS FOUND:"
            echo "====================="
            head -n 6 "$LATEST_CSV"
          fi

          # Calculate detection rate
          if [ -f "daily_reports/vcp_summary_*.json" ]; then
            SUMMARY_FILE=$(ls -t daily_reports/vcp_summary_*.json | head -n1)
            SYMBOLS_SCANNED=$(grep -o '"total_symbols_scanned":[0-9]*' "$SUMMARY_FILE" | grep -o '[0-9]*')

            if [ "$SYMBOLS_SCANNED" -gt 0 ]; then
              DETECTION_RATE=$(echo "scale=2; $TOTAL_PATTERNS * 100 / $SYMBOLS_SCANNED" | bc -l)
              echo ""
              echo "📊 DETECTION STATISTICS:"
              echo "Symbols scanned: $SYMBOLS_SCANNED"
              echo "Detection rate: ${DETECTION_RATE}%"

              # Validate realistic detection rate
              if (( $(echo "$DETECTION_RATE >= 0.5" | bc -l) )) && (( $(echo "$DETECTION_RATE <= 5.0" | bc -l) )); then
                echo "✅ Detection rate is realistic (0.5-5%)"
              else
                echo "⚠️ Detection rate may be abnormal (expected 0.5-5%)"
              fi
            fi
          fi
        else
          echo "❌ No CSV report found - screening may have failed"
          exit 1
        fi

    - name: Upload production test artifacts
      uses: actions/upload-artifact@v3
      with:
        name: production-test-results-${{ github.run_number }}
        path: daily_reports/
        retention-days: 7

    - name: Production test summary
      run: |
        echo ""
        echo "🎉 PRODUCTION TEST COMPLETED"
        echo "============================"
        echo "✅ Full S&P 500 screening successful"
        echo "✅ Telegram notifications working"
        echo "✅ Reports generated successfully"
        echo ""
        echo "📱 Check your Telegram for the screening report!"
        echo "📄 Download artifacts to review detailed results"
        echo ""
        echo "🚀 Your VCP system is ready for daily automation!"